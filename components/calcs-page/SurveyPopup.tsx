'use client';

import { useEffect, useState } from 'react';
import { ButtonSecond } from '../ButtonSecond';

const SurveyPopup = () => {
  const [showPopup, setShowPopup] = useState(false);

  useEffect(() => {
    if (typeof window === 'undefined') return;
    const submitted = sessionStorage.getItem('submittedQuestions');

    if (!submitted || submitted === 'false') {
      const timeout = setTimeout(() => {
        setShowPopup(true);
      }, Math.random() * (15000 - 10000) + 10000); // –í–∏–ø–∞–¥–∫–æ–≤–∏–π —á–∞—Å –º—ñ–∂ 10-15 —Å–µ–∫.

      return () => clearTimeout(timeout);
    }
  }, []);

  const handleClose = () => {
    setShowPopup(false);
  };

  if (!showPopup) return null;

  return (
    <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
      <div className="bg-white p-6 rounded-lg shadow-lg max-w-sm text-center">
        <p className="text-lg font-semibold">
          üí° –ú–∏ –ø–æ–∫—Ä–∞—â—É—î–º–æ –Ω–∞—à—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏!
        </p>
        <p className="mt-2 text-gray-700">
          –î–æ–ø–æ–º–æ–∂—ñ—Ç—å –Ω–∞–º —Å—Ç–≤–æ—Ä–∏—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤—ñ—Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è.
          –í—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑–∞–π–º—É—Ç—å 30 —Å–µ–∫—É–Ω–¥! –í –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –±–µ–∫–æ—à—Ç–æ–≤–Ω–∏–π –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç
        </p>
        <ButtonSecond
          route="/questionary"
          text="–ü—Ä–æ–π—Ç–∏ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è üìù"
          width="mx-auto mt-4 w-full md:w-[284px]"
        />
        <button
          onClick={handleClose}
          className="mt-3 text-gray-500 hover:text-gray-700"
        >
          –ó–∞–∫—Ä–∏—Ç–∏
        </button>
      </div>
    </div>
  );
};

export default SurveyPopup;
